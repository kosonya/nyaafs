#!/usr/bin/env python
#-*- coding: utf-8 -*-
#
# Copyright (C) 2009 Maxim Kovalev
#
# This file is part of NyaaFS
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# $Id$
 
from nyaerror import NyaError
import xattr
import hierarchy

class xattr_tree(object):
    def __init__(self, path, cursor, base):
        self.path=path
        self.cu = cursor
        self.db = base
        self.attrs = []
        for item in path:
            if item != '!select':
                self.path = self.path[1:]
                attrs.append(item)
            else:
                self.path = self.path[1:]
                break
    
    def get_subdirs(self, parent_val, parent_attr, child_attr):
        px = xattr.xattr(parent_attr, self.cu, self.db)
        all_parents = px.get_ids(parent_attr)
        cx = xattr.xattr(child_attr, self.cu, self.db)
        childs = []
        for id in all_parents:
            val = cx.get_attr(id)
            if val in childs:
                pass
            else:
                childs.append(val)
        return childs
    
    def get_root_attrs(self, root_attr, child_attr):
        return self.get_subdirs("", root_attr, child_attr)
    
    def get_by_path(self):
        if len(self.path) == 1:
            return map((lambda (name): (0, name, "dir")), self.get_root_attrs(attr[0], path[0]))
        for x in xrange(len(self.attrs)):
            pass